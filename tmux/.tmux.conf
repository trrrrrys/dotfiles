# 全解除
unbind -a
# デフォルトのバインド
# bind-key C-b send-prefix
bind-key C-o rotate-window
bind-key C-z suspend-client
# bind-key Space next-layout 
bind-key ! break-pane # current pane を新しいwindowで開く
# bind-key '"' split-window # pane縦分割
bind-key '#' list-buffers
bind-key '$' command-prompt -I "#S" "rename-session '%%'" # session 名変更
# bind-key % split-window -h # pane 横分割
bind-key & confirm-before -p "kill-window #W? (y/n)" kill-window # window削除
bind-key "'" command-prompt -p index "select-window -t ':%%'" # windowのindexを指定して移動 
bind-key ( switch-client -p # セッション切り替え 
bind-key ) switch-client -n # セッション切り替え
bind-key , command-prompt -I "#W" "rename-window '%%'" # window名変更
# bind-key - delete-buffer # delete buffer
bind-key . command-prompt "move-window -t '%%'" # window移動
bind-key 0 select-window -t :0 # window0に移動
bind-key 1 select-window -t :1 # window1に移動
bind-key 2 select-window -t :2 # window2に移動
bind-key 3 select-window -t :3 # window3に移動
bind-key 4 select-window -t :4 # window4に移動
bind-key 5 select-window -t :5 # window5に移動
bind-key 6 select-window -t :6 # window6に移動
bind-key 7 select-window -t :7 # window7に移動
bind-key 8 select-window -t :8 # window8に移動
bind-key 9 select-window -t :9 # window9に移動
bind-key : command-prompt
# bind-key \ last-pane
bind-key = choose-buffer
bind-key ? list-keys
bind-key D choose-client
bind-key L switch-client -l
bind-key [ copy-mode
bind-key ] paste-buffer
bind-key c new-window
bind-key d detach-client
# bind-key f command-prompt "find-window '%%'"
bind-key i display-message
bind-key l last-window
bind-key m select-pane -m
bind-key n next-window
bind-key o select-pane -t :.+
bind-key p previous-window
bind-key q display-panes
bind-key r refresh-client
bind-key s choose-session
bind-key t clock-mode
bind-key w choose-window
bind-key x confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key z resize-pane -Z
bind-key '{' swap-pane -U
bind-key '}' swap-pane -D
bind-key '~' show-messages
bind-key PPage copy-mode -u
bind-key -r Up select-pane -U
bind-key -r Down select-pane -D
bind-key -r Left select-pane -L
bind-key -r Right select-pane -R
bind-key -r M-1 select-layout even-horizontal
bind-key -r M-2 select-layout even-vertical
bind-key -r M-3 select-layout main-horizontal
bind-key -r M-4 select-layout main-vertical
bind-key -r M-5 select-layout tiled
bind-key -r M-n next-window -a
bind-key -r M-o rotate-window -D
bind-key -r M-p previous-window -a
bind-key -r M-Up resize-pane -U 5
bind-key -r M-Down resize-pane -D 5
bind-key -r M-Left resize-pane -L 5
bind-key -r M-Right resize-pane -R 5
bind-key -r C-Up resize-pane -U
bind-key -r C-Down resize-pane -D
bind-key -r C-Left resize-pane -L
bind-key -r C-Right resize-pane -R 

set-option -g default-shell /bin/zsh


# plugin
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-resurrect-auto'
set -g @plugin 'Morantron/tmux-fingers'


run -b '~/.tmux/plugins/tpm/tpm'
# tmuxを256色表示できるようにする
set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

set -g escape-time 0
# prefix
set -g prefix C-s

# デフォルトのバインド解除
unbind C-b

# ウインドウを閉じた際にwindow番号を採番する.
set-option -g renumber-windows on

# windowのディレクトリ
# bind c new-window -c '#{pane_current_path}'
bind c new-window -c '~'

# pane
## prefix + qの時間を長くする
set -g display-panes-time 10000

setw -g pane-base-index 1


# ステータス
set-option -g status-position bottom
set-option -g status-left-length 90
set-option -g status-right-length 90

# n秒ごとにstatus更新
set-option -g status-interval 5

# #S: セッション名称
# #I: Window番号
# #P: pane番号
set-option -g status-left  "#[bg=colour148]#[fg=colour234] #S: #I.#P "

# set -g pane-border-style fg="colour235",bg="colour234"
set -g pane-border-style fg="colour234",bg="colour234"
set -g pane-active-border-style bg="colour234",fg="colour172"
set -g status-position bottom
set -g status-justify left
set -g status-bg colour235

setw -g window-status-current-style bg="colour239"
setw -g window-status-current-format '\
#[fg=colour239]#[bg=colour234]#[bg=colour239]#[fg=colour119]\
#I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]\
#F 🍹#[fg=colour239]#[bg=colour234]'

setw -g window-status-style fg="colour244",bg="colour234"

setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

set-option -g status-right "#[fg=colour236]#[fg=colour253]#[bg=colour236]\
Conteiners: #(echo $(docker ps -q | wc -l))#[fg=colour238]#[fg=colour254]#[bg=colour238]\
CPU: #{cpu_percentage}#[fg=colour238]#[fg=colour254]#[bg=colour238]\
Mem: #(sh ~/.tmux/mem_percentage.sh)%%#[fg=colour254] #[fg=colour240]#[fg=colour255]#[bg=colour240]\
%Y/%m/%d(%a) %H:%M "

# key bind

# pane移動
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# pane resize
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5


# 横分割
bind | split-window -h -c '#{pane_current_path}'

# 縦分割
bind - split-window -v -c '#{pane_current_path}'

# window index の開始値
set-option -g base-index 1

# マウス操作を有効にする
# set-option -g mouse on
set-option -g mouse off
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# コピーモード
# vimキーバインドを使う
setw -g mode-keys vi

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi V send -X select-line
# 矩形選択
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Y send -X copy-line
bind -T copy-mode-vi : send -X jump-again
bind -T copy-mode-vi C-h send -X start-of-line
bind -T copy-mode-vi C-l send -X end-of-line
bind -T copy-mode-vi Escape send -X cancel
# paste

# tmux-resurrecr
set -g @resurrect-strategy-vim 'session'
# set -g @resurrect-processes ''
